
name: CI

on: [push]

jobs:

  test-os:

    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:

      # Having multiple matrices (e.g. os *and* gfortran) will test every
      # possible combination of those two matrices!
      matrix:
        os: [ubuntu-latest]
        #os: [ubuntu-latest, macOS-latest]
        #os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:

    - uses: actions/checkout@v3
    - uses: fortran-lang/setup-fpm@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    #- uses: fortran-lang/setup-fortran@v1
    #  id: setup-fortran
    #  with:
    #    compiler: intel
    #    version: 2023.2
    #    #compiler: ${{ matrix.toolchain.compiler }}
    #    #version: ${{ matrix.toolchain.version }}

    - uses: rscohn2/setup-oneapi@v0
      with:
        list: true
        components: |
          ifx@2024.0.0
          mkl@2024.0.0
    - name: Test fortran install
      run: |
        source /opt/intel/oneapi/setvars.sh
        ifx --version

    - if: matrix.os == 'ubuntu-latest'
      name: Run fpm default
      env:
        #FPM_FC: ${{ env.FC }}
        FPM_FC: "ifx"
      run: |
        #sudo apt install intel-oneapi-mkl-devel intel-oneapi-openmp
        #source /opt/intel/oneapi/setvars.sh --force
        mkdir scratch
        fpm run --flag "-fpp -qmkl -heap-arrays0 -check noarg_temp_created" --profile debug   -- inputs/cubes.ribbit
        fpm run --flag "-fpp -qmkl -heap-arrays0 -check noarg_temp_created" --profile release -- inputs/cubes.ribbit

